# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import interface.bci.bci_pb2 as bci_dot_bci__pb2


class LaneStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendData = channel.unary_unary(
                '/bci.Lane/SendData',
                request_serializer=bci_dot_bci__pb2.RequestSendData.SerializeToString,
                response_deserializer=bci_dot_bci__pb2.ResponseSendData.FromString,
                )
        self.JoinRC = channel.unary_unary(
                '/bci.Lane/JoinRC',
                request_serializer=bci_dot_bci__pb2.RequestJoinRC.SerializeToString,
                response_deserializer=bci_dot_bci__pb2.ResponseJoinRC.FromString,
                )
        self.GossipQueryPath = channel.unary_unary(
                '/bci.Lane/GossipQueryPath',
                request_serializer=bci_dot_bci__pb2.RequestGossipQueryPath.SerializeToString,
                response_deserializer=bci_dot_bci__pb2.ResponseGossipQueryPath.FromString,
                )
        self.GossipCallBack = channel.unary_unary(
                '/bci.Lane/GossipCallBack',
                request_serializer=bci_dot_bci__pb2.RequestGossipCallBack.SerializeToString,
                response_deserializer=bci_dot_bci__pb2.ResponseGossipCallBack.FromString,
                )


class LaneServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def JoinRC(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GossipQueryPath(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GossipCallBack(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LaneServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendData': grpc.unary_unary_rpc_method_handler(
                    servicer.SendData,
                    request_deserializer=bci_dot_bci__pb2.RequestSendData.FromString,
                    response_serializer=bci_dot_bci__pb2.ResponseSendData.SerializeToString,
            ),
            'JoinRC': grpc.unary_unary_rpc_method_handler(
                    servicer.JoinRC,
                    request_deserializer=bci_dot_bci__pb2.RequestJoinRC.FromString,
                    response_serializer=bci_dot_bci__pb2.ResponseJoinRC.SerializeToString,
            ),
            'GossipQueryPath': grpc.unary_unary_rpc_method_handler(
                    servicer.GossipQueryPath,
                    request_deserializer=bci_dot_bci__pb2.RequestGossipQueryPath.FromString,
                    response_serializer=bci_dot_bci__pb2.ResponseGossipQueryPath.SerializeToString,
            ),
            'GossipCallBack': grpc.unary_unary_rpc_method_handler(
                    servicer.GossipCallBack,
                    request_deserializer=bci_dot_bci__pb2.RequestGossipCallBack.FromString,
                    response_serializer=bci_dot_bci__pb2.ResponseGossipCallBack.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bci.Lane', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Lane(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bci.Lane/SendData',
            bci_dot_bci__pb2.RequestSendData.SerializeToString,
            bci_dot_bci__pb2.ResponseSendData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def JoinRC(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bci.Lane/JoinRC',
            bci_dot_bci__pb2.RequestJoinRC.SerializeToString,
            bci_dot_bci__pb2.ResponseJoinRC.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GossipQueryPath(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bci.Lane/GossipQueryPath',
            bci_dot_bci__pb2.RequestGossipQueryPath.SerializeToString,
            bci_dot_bci__pb2.ResponseGossipQueryPath.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GossipCallBack(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bci.Lane/GossipCallBack',
            bci_dot_bci__pb2.RequestGossipCallBack.SerializeToString,
            bci_dot_bci__pb2.ResponseGossipCallBack.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
