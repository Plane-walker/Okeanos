syntax = "proto3";
package tendermint.abci;

option go_package = "github.com/tendermint/tendermint/abci/types";

// For more information on gogo.proto, see:
// https://github.com/gogo/protobuf/blob/master/extensions.md
import "tendermint/crypto/proof.proto";
import "tendermint/types/types.proto";
import "tendermint/crypto/keys.proto";
import "tendermint/types/params.proto";
import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";

// This file is copied from http://github.com/tendermint/abci
// NOTE: When using custom types, mind the warnings.
// https://github.com/gogo/protobuf/blob/master/custom_types.md#warnings-and-issues

//----------------------------------------
// Request types

message Request {
    oneof value {
        RequestEcho               echo                 = 1;
        RequestFlush              flush                = 2;
        RequestInfo               info                 = 3;
        RequestInitChain          init_chain           = 4;
        RequestQuery              query                = 5;
        RequestBeginBlock         begin_block          = 6;
        RequestCheckTx            check_tx             = 7;
        RequestDeliverTx          deliver_tx           = 8;
        RequestEndBlock           end_block            = 9;
        RequestCommit             commit               = 10;
        RequestListSnapshots      list_snapshots       = 11;
        RequestOfferSnapshot      offer_snapshot       = 12;
        RequestLoadSnapshotChunk  load_snapshot_chunk  = 13;
        RequestApplySnapshotChunk apply_snapshot_chunk = 14;
    }
}

message RequestInfo {
    string version       = 1;
    uint64 block_version = 2;
    uint64 p2p_version   = 3;
    string abci_version  = 4;
}

message RequestInitChain {
    google.protobuf.Timestamp        time             = 1 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
    string                           chain_id         = 2;
    tendermint.types.ConsensusParams consensus_params = 3;
    repeated ValidatorUpdate         validators       = 4 [(gogoproto.nullable) = false];
    bytes                            app_state_bytes  = 5;
    int64                            initial_height   = 6;
}

message RequestQuery {
    bytes  data   = 1;
    string path   = 2;
    int64  height = 3;
    bool   prove  = 4;
}

message RequestBeginBlock {
    bytes                   hash                 = 1;
    tendermint.types.Header header               = 2 [(gogoproto.nullable) = false];
    LastCommitInfo          last_commit_info     = 3 [(gogoproto.nullable) = false];
    repeated Evidence       byzantine_validators = 4 [(gogoproto.nullable) = false];
}

enum CheckTxType {
    NEW     = 0 [(gogoproto.enumvalue_customname) = "New"];
    RECHECK = 1 [(gogoproto.enumvalue_customname) = "Recheck"];
}

message RequestCheckTx {
    bytes       tx   = 1;
    CheckTxType type = 2;
}

message RequestDeliverTx {
    bytes tx = 1;
}

message RequestEndBlock {
    int64 height = 1;
}

message RequestCommit {}

//----------------------------------------
// Response types

message Response {
    oneof value {
        ResponseException          exception            = 1;
        ResponseEcho               echo                 = 2;
        ResponseFlush              flush                = 3;
        ResponseInfo               info                 = 4;
        ResponseInitChain          init_chain           = 5;
        ResponseQuery              query                = 6;
        ResponseBeginBlock         begin_block          = 7;
        ResponseCheckTx            check_tx             = 8;
        ResponseDeliverTx          deliver_tx           = 9;
        ResponseEndBlock           end_block            = 10;
        ResponseCommit             commit               = 11;
        ResponseListSnapshots      list_snapshots       = 12;
        ResponseOfferSnapshot      offer_snapshot       = 13;
        ResponseLoadSnapshotChunk  load_snapshot_chunk  = 14;
        ResponseApplySnapshotChunk apply_snapshot_chunk = 15;
    }
}

// nondeterministic
message ResponseException {
    string error = 1;
}


message ResponseInfo {
    string data = 1;

    // this is the software version of the application. TODO: remove?
    string version     = 2;
    uint64 app_version = 3;

    int64 last_block_height   = 4;
    bytes last_block_app_hash = 5;
}

message ResponseInitChain {
    tendermint.types.ConsensusParams consensus_params = 1;
    repeated ValidatorUpdate         validators       = 2 [(gogoproto.nullable) = false];
    bytes                            app_hash         = 3;
}

message ResponseQuery {
    uint32 code = 1;
    // bytes data = 2; // use "value" instead.
    string                     log       = 3;  // nondeterministic
    string                     info      = 4;  // nondeterministic
    int64                      index     = 5;
    bytes                      key       = 6;
    bytes                      value     = 7;
    tendermint.crypto.ProofOps proof_ops = 8;
    int64                      height    = 9;
    string                     codespace = 10;
}

message ResponseBeginBlock {
    repeated Event events = 1 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "events,omitempty"];
}

message ResponseCheckTx {
    uint32         code       = 1;
    bytes          data       = 2;
    string         log        = 3;  // nondeterministic
    string         info       = 4;  // nondeterministic
    int64          gas_wanted = 5 [json_name = "gas_wanted"];
    int64          gas_used   = 6 [json_name = "gas_used"];
    repeated Event events     = 7 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "events,omitempty"];
    string         codespace  = 8;
    string         sender     = 9;
    int64          priority   = 10;

    // mempool_error is set by Tendermint.
    // ABCI applications creating a ResponseCheckTX should not set mempool_error.
    string mempool_error = 11;
}

message ResponseDeliverTx {
    uint32         code       = 1;
    bytes          data       = 2;
    string         log        = 3;  // nondeterministic
    string         info       = 4;  // nondeterministic
    int64          gas_wanted = 5 [json_name = "gas_wanted"];
    int64          gas_used   = 6 [json_name = "gas_used"];
    repeated Event events     = 7
    [(gogoproto.nullable) = false, (gogoproto.jsontag) = "events,omitempty"];  // nondeterministic
    string codespace = 8;
}

message ResponseEndBlock {
    repeated ValidatorUpdate         validator_updates       = 1 [(gogoproto.nullable) = false];
    tendermint.types.ConsensusParams consensus_param_updates = 2;
    repeated Event                   events                  = 3 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "events,omitempty"];
}

message ResponseCommit {
    // reserve 1
    bytes data          = 2;
    int64 retain_height = 3;
}


service Service {
    rpc Info(RequestInfo) returns (ResponseInfo);
    rpc DeliverTx(RequestDeliverTx) returns (ResponseDeliverTx);
    rpc CheckTx(RequestCheckTx) returns (ResponseCheckTx);
    rpc Query(RequestQuery) returns (ResponseQuery);
    rpc Commit(RequestCommit) returns (ResponseCommit);
    rpc InitChain(RequestInitChain) returns (ResponseInitChain);
    rpc BeginBlock(RequestBeginBlock) returns (ResponseBeginBlock);
    rpc EndBlock(RequestEndBlock) returns (ResponseEndBlock);
}
